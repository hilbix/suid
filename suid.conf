# Sample /etc/suid.conf
#
# This Works is placed under the terms of the Copyright Less License,
# see file COPYRIGHT.CLL.  USE AT OWN RISK, ABSOLUTELY NO WARRANTY.
#
# Empty lines and lines starting with # are ignored
# All other lines mostly conform to /etc/passwd format:
#
## command:pw:user:group:minmax:dir:/path/to/binary:args..
#
# For escaping binary/args which contain ':' see below
#
# "command":	this must be given to "suid" as first argument.
# "pw":		must be empty for now
# "user" and "group" are:
# - "" (empty):	Effective UID/GID is used
# - "*":	UID/GID of the calling user is used
# - "=":	GID from the USER entry is used
# - "num":	UID/GID
# - "name":	Username/Groupname is used
# "minmax" are flags:
# - "C":	argv[] is given suid cmd (default: command in .conf)
# - "D":	debugging to stderr
# - "I":	insecure operation (do not check exec'd file permission)
# - "F":	argv[0] is file name of real exec'd file
# - "R":	argv[0] is real path of real exec'd file
# - "S":	disable shellshock prevention (allows env starting with '() {')
# - "!":	this entry is an option, see below
# - "num":	minimum number of args from commandline, optional, default 0
# - "-num":	maximum number of args, if "num" missing unlimited, defaults to min
# "dir":	optional directory, if not set (empty) directory is not changed
# - "." uses the HOME of the user as directory
# "/path/to/binary": command to execute
# - this can be prefixed by optional list of modifiers like "suid" or "esuid", see below.
# ":args..":	optional list of preset arguments, separated by ':'.  Can be left away.
# - Commandline arguments are added to the end of this list, if "minmax" permits.
#
# Modifiers are ":"-separated prefixes to "/path/to/binary":
# - "esuid:" to NOT switch user, instead pass chosen user/group in euid()/egid().
# - "suid:" as before, but fake as if command had SUID flags on filesystem.
#   ("esuid:" and "suid:" only differ on users which are not "root:root")
#
# Example: cmd:::::.:suid:/path/to/binary:args..
#
## Environment:
#
# If a ShellShock-Pattern is detected, the variable is not set.
# - Use option "S" to pass ShellShock pattern
#
# All existing environment variables are prefixed with "SUID_", except:
# - "TERM" is preserved
# - a default "PATH" is set
# - "SUIDUID" and "SUIDGID" are set to the original UID/GID of the caller.
# - "SUIDPWD" is set to the original current directory.
#
## Escapes:
#
# There are two (only two) escape sequences (literally) understood:
#
# '\\:' which takes precedence and is removed.
# '\:' which is the escape for ':'.
# Hence in scripts which modify this file here (or extend suid.conf.d)
# you can unambiguously escape ':' in arguments to '\\:\:'.
#
# These escapes can be easily scanned forward and backward,
# and an escaped command can be easiliy and unambiguously created in /bin/bash:
#  cmd=(command line args); printf ':%s\\\\:' "${cmd[@]//:/\\\\:\\:}"
# as long as there is no linefeed anywhere.  With linefeeds do:
#  printf -v esc1 ' %q' "${cmd[@]}"; printf ":bash:-c:%s" "${esc1//:/\\\\:\\:}"
#
# Examples:
# 'ab' can be written as 'a\\:b' or '\\:a\\:b\\:' or similar.
# 'a:b' must be 'a\:b' at least and should be 'a\\:\:b'.
# 'a\b' can be 'a\b' but 'a\\\:b' is ok as well.
# 'a\:b' must be 'a\\\:\:b' as 'a\\:b' becomes 'ab'.  Compare:
# 'a\\:b' must be 'a\\\\:\:b', so adding a '\' is possible.

#echo::::D-:/:/bin/echo:--
#dmesg:::::/:/bin/dmesg
#dmesgrw:::::/:/bin/dmesg:-rw
